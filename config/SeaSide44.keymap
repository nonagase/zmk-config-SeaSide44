#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        jis_at_sign: to_layer_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp AT_SIGN &kp LS(GRAVE)>;
            label = "TO_LAYER_0";
        };

        jis_hyphen: jis_hyphen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp EQUAL>;
            label = "JIS_HYPHEN";
        };

        jis_semicolon: jis_semicolon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SEMICOLON &kp PLUS>, <&macro_press>;

            label = "JIS_SEMICOLON";
        };

        jis_colon: jis_colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp LS(ASTERISK)>;
            label = "JIS_COLON";
        };

        jis_back_slash: jis_left_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp BACKSLASH &kp LS(UNDERSCORE)>;
            label = "JIS_LEFT_BRACKET";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&jis_at_sign>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB         &kp Q  &kp W         &kp E         &kp R     &kp T                                         &kp Y        &kp U  &kp I            &kp O       &kp P          &kp LEFT_BRACKET
&kp LEFT_SHIFT  &kp A  &kp S         &kp D         &kp F     &kp G                                         &kp H        &kp J  &lt 3 K          &kp L       &kp SEMICOLON  &kp SQT
&kp LCTRL       &kp Z  &kp X         &kp C         &kp V     &kp B                                         &kp N        &kp M  &kp COMMA        &kp PERIOD  &kp SLASH      &jis_back_slash
                       &kp LEFT_WIN  &kp LEFT_ALT  &kp CAPS  &lt 1 SPACE  &lt 2 BACKSPACE    &lt 2 DELETE  &lt 1 ENTER         &kp PRINTSCREEN
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp F1  &kp F2  &kp F3          &kp F4          &kp F5           &kp F6                    &kp F7          &kp F8                &kp F9                 &kp F10   &kp F11            &kp F12
&trans  &trans  &kp SCROLLLOCK  &kp KP_NUMLOCK  &kp PAUSE_BREAK  &trans                    &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMI  &kp COLON          &kp N1
&trans  &trans  &trans          &trans          &trans           &trans                    &kp PIPE        &kp LBKT              &kp RBKT               &kp SQT   &kp DOUBLE_QUOTES  &kp N2
                &trans          &trans          &trans           &trans  &trans    &trans  &trans                                &kp ESC
            >;
        };

        NUM {
            bindings = <
&trans  &trans  &kp F9  &kp F10  &kp F11  &kp F12                    &kp N7        &kp NUMBER_8  &kp NUMBER_9  &kp PLUS         &kp MINUS  &kp N0
&trans  &trans  &kp F5  &kp F6   &kp F7   &kp F8                     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK     &kp SLASH  &kp N1
&trans  &trans  &kp F1  &kp F2   &kp F3   &kp F4                     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp RIGHT_BRACE  &kp COLON  &kp N2
                &trans  &trans   &trans   &trans   &trans    &trans  &kp NUMBER_0                &kp PERIOD
            >;
        };

        ARROW {
            bindings = <
&trans  &kp ESCAPE      &mkp MB4                &kp UP_ARROW    &mkp MB5                 &trans                     &kp LG(LEFT_ARROW)          &kp LA(LEFT_ARROW)      &kp UP_ARROW    &kp RA(RIGHT_ARROW)      &kp RG(RIGHT_ARROW)          &kp N0
&trans  &kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END                    &kp LC(LS(TAB))             &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp RC(TAB)                  &kp N1
&trans  &kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans                     &kp LA(LG(LC(LEFT_ARROW)))  &kp LA(LG(LEFT_ARROW))  &kp LA(LG(F))   &kp RG(RA(RIGHT_ARROW))  &kp RA(RC(RG(RIGHT_ARROW)))  &kp N2
                        &trans                  &trans          &trans                   &trans   &trans    &trans  &trans                                              &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &kp N0
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans  &kp N1
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &kp N2
                &trans  &trans  &trans  &trans  &trans    &trans  &trans            &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans            &trans  &trans  &trans  &trans  &kp N0
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans            &trans  &trans  &trans  &trans  &kp N1
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans            &trans  &trans  &trans  &trans  &kp N2
                &trans  &trans  &trans  &kp LS(LG(N5))  &kp LS(LG(N4))    &kp LC(DOWN)  &kp LC(UP_ARROW)          &trans
            >;
        };

        CONFIG {
            bindings = <
&trans  &bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N0
&trans  &trans          &trans        &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N1
&trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &bootloader  &trans  &trans  &trans  &trans  &kp N2
                        &trans        &trans        &trans        &trans        &trans    &trans  &trans               &trans
            >;
        };
    };
};
